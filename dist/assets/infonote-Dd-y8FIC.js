import{_ as f,c as i,a as t,w as u,v as c,b as d,t as h,o as a,d as v}from"./_plugin-vue_export-helper-BGRe_7go.js";const w={name:"infonote",data(){return{note:{title:"",content:"",_id:"",userId:""},showSaveModal:!1,showDeleteModal:!1,showSuccessMessage:!1,showPreview:!1}},mounted(){const s=new URLSearchParams(window.location.search).get("noteId");s&&this.fetchNoteDetails(s)},methods:{goBack(){window.history.back()},async fetchNoteDetails(s){try{const e=await fetch(`https://localhost:5000/api/v1/notes/note/${s}`,{method:"GET",credentials:"include"});if(e.ok){const r=await e.json();this.note={...r,userId:r.userId||this.getUserIdFromToken()}}else console.error("Error fetching note details:",e.statusText)}catch(e){console.error("Error fetching note details:",e)}},updateTitle(s){this.note.title=s.target.value},updateContent(s){this.note.content=s.target.value},async confirmSave(){await this.updateNote(),this.showSaveModal=!1,this.showSuccessMessage=!0},async updateNote(){try{const s=await fetch("https://localhost:5000/api/v1/notes/updatenote",{method:"PUT",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({noteId:this.note._id,userId:this.note.userId,title:this.note.title,content:this.note.content})});s.ok?this.goBack():console.error("Error updating note:",s.statusText)}catch(s){console.error("Error updating note:",s)}},async confirmDelete(){await this.trashNote(),this.showDeleteModal=!1,window.location.href="home.html"},async trashNote(){console.log("Trying to toggle visualization for note ID:",this.note._id);try{const s=await fetch(`https://localhost:5000/api/v1/notes/${this.note._id}/visualization`,{method:"PUT",headers:{"Content-Type":"application/json"},credentials:"include"});if(s.ok){const e=await s.json();return console.log("Visualization toggled:",e.visualization),!0}else return console.error("Error toggling visualization:",s.statusText),!1}catch(s){return console.error("Error toggling visualization:",s),!1}},allowEnter(s){s.key},closeSuccessMessage(){this.showSuccessMessage=!1},getUserIdFromToken(){var e;const s=(e=document.cookie.split("; ").find(r=>r.startsWith("auth_token=")))==null?void 0:e.split("=")[1];if(!s)return null;try{return JSON.parse(atob(s.split(".")[1])).userId}catch(r){return console.error("Error decoding token:",r),null}}}},g={class:"container"},p={class:"header"},k={key:0,class:"content"},m={key:1,class:"content"},y={class:"preview-content"},S={key:0},M=["innerHTML"],T={key:2,class:"modal"},C={class:"modal-content"},b={class:"buttons"},E={key:3,class:"modal"},I={class:"modal-content"},D={class:"buttons"},N={key:4,class:"success-message"};function x(s,e,r,B,n,l){return a(),i("div",g,[t("div",p,[t("i",{class:"fas fa-arrow-left back-icon",onClick:e[0]||(e[0]=(...o)=>l.goBack&&l.goBack(...o))}),t("div",null,[t("i",{class:"fas fa-eye",onClick:e[1]||(e[1]=o=>n.showPreview=!n.showPreview)}),t("button",{class:"save",onClick:e[2]||(e[2]=o=>n.showSaveModal=!0)},e[15]||(e[15]=[t("i",{class:"fas fa-save"},null,-1)])),t("button",{class:"delete",onClick:e[3]||(e[3]=o=>n.showDeleteModal=!0)},e[16]||(e[16]=[t("i",{class:"fas fa-trash"},null,-1)]))])]),n.showPreview?d("",!0):(a(),i("div",k,[u(t("textarea",{ref:"title",class:"editable-title",onInput:e[4]||(e[4]=(...o)=>l.updateTitle&&l.updateTitle(...o)),placeholder:"Title","onUpdate:modelValue":e[5]||(e[5]=o=>n.note.title=o),onKeydown:e[6]||(e[6]=(...o)=>l.allowEnter&&l.allowEnter(...o))},null,544),[[c,n.note.title]]),u(t("textarea",{ref:"content",class:"editable-content",onInput:e[7]||(e[7]=(...o)=>l.updateContent&&l.updateContent(...o)),placeholder:"Write your content here...","onUpdate:modelValue":e[8]||(e[8]=o=>n.note.content=o),onKeydown:e[9]||(e[9]=(...o)=>l.allowEnter&&l.allowEnter(...o))},null,544),[[c,n.note.content]])])),n.showPreview?(a(),i("div",m,[t("div",y,[n.note.title?(a(),i("h1",S,h(n.note.title),1)):d("",!0),t("p",{innerHTML:n.note.content},null,8,M)])])):d("",!0),n.showSaveModal?(a(),i("div",T,[t("div",C,[e[17]||(e[17]=t("i",{class:"fas fa-info-circle"},null,-1)),e[18]||(e[18]=t("p",null,"Save changes?",-1)),t("div",b,[t("button",{class:"discard",onClick:e[10]||(e[10]=o=>n.showSaveModal=!1)},"Cancel"),t("button",{class:"save",onClick:e[11]||(e[11]=(...o)=>l.confirmSave&&l.confirmSave(...o))},"Save")])])])):d("",!0),n.showDeleteModal?(a(),i("div",E,[t("div",I,[e[19]||(e[19]=t("i",{class:"fas fa-trash"},null,-1)),e[20]||(e[20]=t("p",null,"Are you sure you want to trash this note?",-1)),t("div",D,[t("button",{class:"discard",onClick:e[12]||(e[12]=o=>n.showDeleteModal=!1)},"Cancel"),t("button",{class:"delete",onClick:e[13]||(e[13]=(...o)=>l.confirmDelete&&l.confirmDelete(...o))},"Trash")])])])):d("",!0),n.showSuccessMessage?(a(),i("div",N,[e[21]||(e[21]=t("p",null,"Saved successfully!",-1)),t("button",{onClick:e[14]||(e[14]=(...o)=>l.closeSuccessMessage&&l.closeSuccessMessage(...o))},"Close")])):d("",!0)])}const P=f(w,[["render",x]]);v(P).mount("#infonote");
